{"ast":null,"code":"import _classCallCheck from \"/Users/chaitalipatel/gameoflife/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chaitalipatel/gameoflife/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chaitalipatel/gameoflife/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chaitalipatel/gameoflife/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chaitalipatel/gameoflife/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chaitalipatel/gameoflife/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; //import { ButtonToolbar, MenuItem, DropdownButton } from 'react-bootstrap';\n\nimport \"./index.css\";\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nvar Box =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Box, _React$Component);\n\n  function Box() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Box);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Box)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.selectBox = function () {\n      _this.props.selectBox(_this.props.row, _this.props.col);\n    };\n\n    return _this;\n  }\n\n  _createClass(Box, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: this.props.boxClass,\n        id: this.props.id,\n        onClick: this.selectBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Box;\n}(React.Component);\n\nvar Grid = function Grid(props) {\n  var width = props.cols * 14;\n  var boxClass = \"\";\n  var rowsArr = props.gridFull.map(function (rowArr, rowIdx) {\n    return rowArr.map(function (item, colIdx) {\n      var boxId = \"\".concat(rowIdx, \"_\").concat(colIdx);\n      boxClass = props.gridFull[rowIdx][colIdx] ? \"box on\" : \"box off\";\n      return React.createElement(Box, {\n        boxClass: boxClass,\n        key: boxId,\n        boxId: boxId,\n        row: rowIdx,\n        col: colIdx,\n        selectBox: props.selectBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    });\n  });\n  return React.createElement(\"div\", {\n    className: \"grid\",\n    style: {\n      width: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, rowsArr);\n};\n\nvar Buttons =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Buttons, _React$Component2);\n\n  function Buttons() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, Buttons);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(Buttons)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _this2.handleSelect = function (eventKey) {\n      _this2.props.gridSize(eventKey);\n    };\n\n    return _this2;\n  }\n\n  _createClass(Buttons, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.playButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Play\"), React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.pauseButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Pause\"), React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.clear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.slow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Slow\"), React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.fast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Fast\"), React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        onClick: this.props.seed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Seed\"), React.createElement(DropdownButton, {\n        title: \"Grid Size\",\n        id: \"size-menu\",\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"// \", React.createElement(MenuItem, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"20x10\"), \"// \", React.createElement(MenuItem, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"50x30\"), \"// \", React.createElement(MenuItem, {\n        eventKey: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"70x50\"))));\n    }\n  }]);\n\n  return Buttons;\n}(React.Component);\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Main, _React$Component3);\n\n  function Main() {\n    var _this3;\n\n    _classCallCheck(this, Main);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this));\n\n    _this3.selectBox = function (row, col) {\n      var gridFull = _this3.state.gridFull.map(function (rowArr, rowIdx) {\n        return rowArr.map(function (item, colIdx) {\n          return rowIdx === row && colIdx === col ? !item : item;\n        });\n      });\n\n      _this3.setState(function () {\n        return {\n          gridFull: gridFull\n        };\n      });\n    };\n\n    _this3.seed = function () {\n      var gridFull = _this3.state.gridFull.map(function (rowArr) {\n        return rowArr.map(function () {\n          return Math.floor(Math.random() * 4) === 1;\n        });\n      });\n\n      _this3.setState(function () {\n        return {\n          gridFull: gridFull\n        };\n      });\n    };\n\n    _this3.playButton = function () {\n      clearInterval(_this3.intervalId);\n      _this3.intervalId = setInterval(_this3.play, _this3.speed);\n    };\n\n    _this3.pauseButton = function () {\n      clearInterval(_this3.intervalId);\n    };\n\n    _this3.slow = function () {\n      _this3.speed = 1000;\n\n      _this3.playButton();\n    };\n\n    _this3.fast = function () {\n      _this3.speed = 100;\n\n      _this3.playButton();\n    };\n\n    _this3.clear = function () {\n      var gridFull = Array(_this3.rows).fill().map(function () {\n        return Array(_this3.cols).fill(false);\n      });\n\n      _this3.setState(function () {\n        return {\n          gridFull: gridFull,\n          generation: 0\n        };\n      });\n    };\n\n    _this3.gridSize = function (size) {\n      switch (size) {\n        case \"1\":\n          _this3.cols = 20;\n          _this3.rows = 10;\n          break;\n\n        case \"2\":\n          _this3.cols = 50;\n          _this3.rows = 30;\n          break;\n\n        default:\n          _this3.cols = 70;\n          _this3.rows = 50;\n      }\n\n      _this3.clear();\n    };\n\n    _this3.play = function () {\n      var g = _this3.state.gridFull;\n      var g2 = arrayClone(_this3.state.gridFull);\n\n      for (var i = 0; i < _this3.rows; i++) {\n        for (var j = 0; j < _this3.cols; j++) {\n          var count = 0;\n          if (i > 0) if (g[i - 1][j]) count++;\n          if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n          if (i > 0 && j < _this3.cols - 1) if (g[i - 1][j + 1]) count++;\n          if (j < _this3.cols - 1) if (g[i][j + 1]) count++;\n          if (j > 0) if (g[i][j - 1]) count++;\n          if (i < _this3.rows - 1) if (g[i + 1][j]) count++;\n          if (i < _this3.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n          if (i < _this3.rows - 1 && _this3.cols - 1) if (g[i + 1][j + 1]) count++;\n          if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n          if (!g[i][j] && count === 3) g2[i][j] = true;\n        }\n      }\n\n      _this3.setState(function (prevState) {\n        return {\n          gridFull: g2,\n          generation: prevState.generation + 1\n        };\n      });\n    };\n\n    _this3.speed = 100;\n    _this3.rows = 30;\n    _this3.cols = 50;\n    _this3.state = {\n      generation: 0,\n      gridFull: Array(_this3.rows).fill().map(function () {\n        return Array(_this3.cols).fill(false);\n      })\n    };\n    return _this3;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.seed();\n      this.playButton();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"The Game of Life\"), React.createElement(Buttons, {\n        playButton: this.playButton,\n        pauseButton: this.pauseButton,\n        slow: this.slow,\n        fast: this.fast,\n        clear: this.clear,\n        seed: this.seed,\n        gridSize: this.gridSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        gridFull: this.state.gridFull,\n        rows: this.rows,\n        cols: this.cols,\n        selectBox: this.selectBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Generations: \", this.state.generation));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nReactDOM.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 229\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/chaitalipatel/gameoflife/src/index.js"],"names":["React","ReactDOM","arrayClone","arr","JSON","parse","stringify","Box","selectBox","props","row","col","boxClass","id","Component","Grid","width","cols","rowsArr","gridFull","map","rowArr","rowIdx","item","colIdx","boxId","Buttons","handleSelect","eventKey","gridSize","playButton","pauseButton","clear","slow","fast","seed","Main","state","setState","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","Array","rows","fill","generation","size","g","g2","i","j","count","prevState","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,aAAP;;AAEA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACD;;IAEKI,G;;;;;;;;;;;;;;;;;;UACJC,S,GAAY,YAAM;AAChB,YAAKC,KAAL,CAAWD,SAAX,CAAqB,MAAKC,KAAL,CAAWC,GAAhC,EAAqC,MAAKD,KAAL,CAAWE,GAAhD;AACD,K;;;;;;;6BAEQ;AACP,aACE;AACE,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,QADxB;AAEE,QAAA,EAAE,EAAE,KAAKH,KAAL,CAAWI,EAFjB;AAGE,QAAA,OAAO,EAAE,KAAKL,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EAbeR,KAAK,CAACc,S;;AAgBxB,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAN,KAAK,EAAI;AACpB,MAAMO,KAAK,GAAGP,KAAK,CAACQ,IAAN,GAAa,EAA3B;AACA,MAAIL,QAAQ,GAAG,EAAf;AACA,MAAMM,OAAO,GAAGT,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAmB,UAACC,MAAD,EAASC,MAAT;AAAA,WACjCD,MAAM,CAACD,GAAP,CAAW,UAACG,IAAD,EAAOC,MAAP,EAAkB;AAC3B,UAAMC,KAAK,aAAMH,MAAN,cAAgBE,MAAhB,CAAX;AAEAZ,MAAAA,QAAQ,GAAGH,KAAK,CAACU,QAAN,CAAeG,MAAf,EAAuBE,MAAvB,IAAiC,QAAjC,GAA4C,SAAvD;AACA,aACE,oBAAC,GAAD;AACE,QAAA,QAAQ,EAAEZ,QADZ;AAEE,QAAA,GAAG,EAAEa,KAFP;AAGE,QAAA,KAAK,EAAEA,KAHT;AAIE,QAAA,GAAG,EAAEH,MAJP;AAKE,QAAA,GAAG,EAAEE,MALP;AAME,QAAA,SAAS,EAAEf,KAAK,CAACD,SANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAdD,CADiC;AAAA,GAAnB,CAAhB;AAkBA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAALA;AAAF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OADH,CADF;AAKD,CA1BD;;IA4BMQ,O;;;;;;;;;;;;;;;;;;WACJC,Y,GAAe,UAAAC,QAAQ,EAAI;AACzB,aAAKnB,KAAL,CAAWoB,QAAX,CAAoBD,QAApB;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWqB,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWsB,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAOE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWuB,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,EAUE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWwB,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,EAaE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWyB,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,EAgBE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKzB,KAAL,CAAW0B,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,EAmBE,oBAAC,cAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,QAAQ,EAAE,KAAKR,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKK,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALL,SAMK,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANL,SAOK,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPL,CAnBF,CADF,CADF;AAiCD;;;;EAvCmB3B,KAAK,CAACc,S;;IA0CtBsB,I;;;;;AACJ,kBAAc;AAAA;;AAAA;;AACZ;;AADY,WAmBd5B,SAnBc,GAmBF,UAACE,GAAD,EAAMC,GAAN,EAAc;AACxB,UAAMQ,QAAQ,GAAG,OAAKkB,KAAL,CAAWlB,QAAX,CAAoBC,GAApB,CAAwB,UAACC,MAAD,EAASC,MAAT;AAAA,eACvCD,MAAM,CAACD,GAAP,CACE,UAACG,IAAD,EAAOC,MAAP;AAAA,iBAAmBF,MAAM,KAAKZ,GAAX,IAAkBc,MAAM,KAAKb,GAA7B,GAAmC,CAACY,IAApC,GAA2CA,IAA9D;AAAA,SADF,CADuC;AAAA,OAAxB,CAAjB;;AAKA,aAAKe,QAAL,CAAc;AAAA,eAAO;AAAEnB,UAAAA,QAAQ,EAARA;AAAF,SAAP;AAAA,OAAd;AACD,KA1Ba;;AAAA,WA4BdgB,IA5Bc,GA4BP,YAAM;AACX,UAAMhB,QAAQ,GAAG,OAAKkB,KAAL,CAAWlB,QAAX,CAAoBC,GAApB,CAAwB,UAAAC,MAAM;AAAA,eAC7CA,MAAM,CAACD,GAAP,CAAW;AAAA,iBAAMmB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,MAAkC,CAAxC;AAAA,SAAX,CAD6C;AAAA,OAA9B,CAAjB;;AAGA,aAAKH,QAAL,CAAc;AAAA,eAAO;AAAEnB,UAAAA,QAAQ,EAARA;AAAF,SAAP;AAAA,OAAd;AACD,KAjCa;;AAAA,WAmCdW,UAnCc,GAmCD,YAAM;AACjBY,MAAAA,aAAa,CAAC,OAAKC,UAAN,CAAb;AACA,aAAKA,UAAL,GAAkBC,WAAW,CAAC,OAAKC,IAAN,EAAY,OAAKC,KAAjB,CAA7B;AACD,KAtCa;;AAAA,WAwCdf,WAxCc,GAwCA,YAAM;AAClBW,MAAAA,aAAa,CAAC,OAAKC,UAAN,CAAb;AACD,KA1Ca;;AAAA,WA4CdV,IA5Cc,GA4CP,YAAM;AACX,aAAKa,KAAL,GAAa,IAAb;;AACA,aAAKhB,UAAL;AACD,KA/Ca;;AAAA,WAiDdI,IAjDc,GAiDP,YAAM;AACX,aAAKY,KAAL,GAAa,GAAb;;AACA,aAAKhB,UAAL;AACD,KApDa;;AAAA,WAsDdE,KAtDc,GAsDN,YAAM;AACZ,UAAMb,QAAQ,GAAG4B,KAAK,CAAC,OAAKC,IAAN,CAAL,CACdC,IADc,GAEd7B,GAFc,CAEV;AAAA,eAAM2B,KAAK,CAAC,OAAK9B,IAAN,CAAL,CAAiBgC,IAAjB,CAAsB,KAAtB,CAAN;AAAA,OAFU,CAAjB;;AAIA,aAAKX,QAAL,CAAc;AAAA,eAAO;AACnBnB,UAAAA,QAAQ,EAARA,QADmB;AAEnB+B,UAAAA,UAAU,EAAE;AAFO,SAAP;AAAA,OAAd;AAID,KA/Da;;AAAA,WAiEdrB,QAjEc,GAiEH,UAAAsB,IAAI,EAAI;AACjB,cAAQA,IAAR;AACE,aAAK,GAAL;AACE,iBAAKlC,IAAL,GAAY,EAAZ;AACA,iBAAK+B,IAAL,GAAY,EAAZ;AACA;;AACF,aAAK,GAAL;AACE,iBAAK/B,IAAL,GAAY,EAAZ;AACA,iBAAK+B,IAAL,GAAY,EAAZ;AACA;;AACF;AACE,iBAAK/B,IAAL,GAAY,EAAZ;AACA,iBAAK+B,IAAL,GAAY,EAAZ;AAXJ;;AAaA,aAAKhB,KAAL;AACD,KAhFa;;AAAA,WAkFda,IAlFc,GAkFP,YAAM;AACX,UAAIO,CAAC,GAAG,OAAKf,KAAL,CAAWlB,QAAnB;AACA,UAAIkC,EAAE,GAAGnD,UAAU,CAAC,OAAKmC,KAAL,CAAWlB,QAAZ,CAAnB;;AAEA,WAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAKN,IAAzB,EAA+BM,CAAC,EAAhC,EAAoC;AAClC,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAKtC,IAAzB,EAA+BsC,CAAC,EAAhC,EAAoC;AAClC,cAAIC,KAAK,GAAG,CAAZ;AACA,cAAIF,CAAC,GAAG,CAAR,EAAW,IAAIF,CAAC,CAACE,CAAC,GAAG,CAAL,CAAD,CAASC,CAAT,CAAJ,EAAiBC,KAAK;AACjC,cAAIF,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAjB,EAAoB,IAAIH,CAAC,CAACE,CAAC,GAAG,CAAL,CAAD,CAASC,CAAC,GAAG,CAAb,CAAJ,EAAqBC,KAAK;AAC9C,cAAIF,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,OAAKtC,IAAL,GAAY,CAA7B,EAAgC,IAAImC,CAAC,CAACE,CAAC,GAAG,CAAL,CAAD,CAASC,CAAC,GAAG,CAAb,CAAJ,EAAqBC,KAAK;AAC1D,cAAID,CAAC,GAAG,OAAKtC,IAAL,GAAY,CAApB,EAAuB,IAAImC,CAAC,CAACE,CAAD,CAAD,CAAKC,CAAC,GAAG,CAAT,CAAJ,EAAiBC,KAAK;AAC7C,cAAID,CAAC,GAAG,CAAR,EAAW,IAAIH,CAAC,CAACE,CAAD,CAAD,CAAKC,CAAC,GAAG,CAAT,CAAJ,EAAiBC,KAAK;AACjC,cAAIF,CAAC,GAAG,OAAKN,IAAL,GAAY,CAApB,EAAuB,IAAII,CAAC,CAACE,CAAC,GAAG,CAAL,CAAD,CAASC,CAAT,CAAJ,EAAiBC,KAAK;AAC7C,cAAIF,CAAC,GAAG,OAAKN,IAAL,GAAY,CAAhB,IAAqBO,CAAC,GAAG,CAA7B,EAAgC,IAAIH,CAAC,CAACE,CAAC,GAAG,CAAL,CAAD,CAASC,CAAC,GAAG,CAAb,CAAJ,EAAqBC,KAAK;AAC1D,cAAIF,CAAC,GAAG,OAAKN,IAAL,GAAY,CAAhB,IAAqB,OAAK/B,IAAL,GAAY,CAArC,EAAwC,IAAImC,CAAC,CAACE,CAAC,GAAG,CAAL,CAAD,CAASC,CAAC,GAAG,CAAb,CAAJ,EAAqBC,KAAK;AAClE,cAAIJ,CAAC,CAACE,CAAD,CAAD,CAAKC,CAAL,MAAYC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAjC,CAAJ,EAAyCH,EAAE,CAACC,CAAD,CAAF,CAAMC,CAAN,IAAW,KAAX;AACzC,cAAI,CAACH,CAAC,CAACE,CAAD,CAAD,CAAKC,CAAL,CAAD,IAAYC,KAAK,KAAK,CAA1B,EAA6BH,EAAE,CAACC,CAAD,CAAF,CAAMC,CAAN,IAAW,IAAX;AAC9B;AACF;;AACD,aAAKjB,QAAL,CAAc,UAAAmB,SAAS;AAAA,eAAK;AAC1BtC,UAAAA,QAAQ,EAAEkC,EADgB;AAE1BH,UAAAA,UAAU,EAAEO,SAAS,CAACP,UAAV,GAAuB;AAFT,SAAL;AAAA,OAAvB;AAID,KAzGa;;AAEZ,WAAKJ,KAAL,GAAa,GAAb;AACA,WAAKE,IAAL,GAAY,EAAZ;AACA,WAAK/B,IAAL,GAAY,EAAZ;AAEA,WAAKoB,KAAL,GAAa;AACXa,MAAAA,UAAU,EAAE,CADD;AAEX/B,MAAAA,QAAQ,EAAE4B,KAAK,CAAC,OAAKC,IAAN,CAAL,CACPC,IADO,GAEP7B,GAFO,CAEH;AAAA,eAAM2B,KAAK,CAAC,OAAK9B,IAAN,CAAL,CAAiBgC,IAAjB,CAAsB,KAAtB,CAAN;AAAA,OAFG;AAFC,KAAb;AANY;AAYb;;;;wCAEmB;AAClB,WAAKd,IAAL;AACA,WAAKL,UAAL;AACD;;;6BA0FQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,OAAD;AACE,QAAA,UAAU,EAAE,KAAKA,UADnB;AAEE,QAAA,WAAW,EAAE,KAAKC,WAFpB;AAGE,QAAA,IAAI,EAAE,KAAKE,IAHb;AAIE,QAAA,IAAI,EAAE,KAAKC,IAJb;AAKE,QAAA,KAAK,EAAE,KAAKF,KALd;AAME,QAAA,IAAI,EAAE,KAAKG,IANb;AAOE,QAAA,QAAQ,EAAE,KAAKN,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAWE,oBAAC,IAAD;AACE,QAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWlB,QADvB;AAEE,QAAA,IAAI,EAAE,KAAK6B,IAFb;AAGE,QAAA,IAAI,EAAE,KAAK/B,IAHb;AAIE,QAAA,SAAS,EAAE,KAAKT,SAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB,KAAK6B,KAAL,CAAWa,UAA7B,CAjBF,CADF;AAqBD;;;;EAlIgBlD,KAAK,CAACc,S;;AAqIzBb,QAAQ,CAACyD,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import { ButtonToolbar, MenuItem, DropdownButton } from 'react-bootstrap';\nimport \"./index.css\";\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nclass Box extends React.Component {\n  selectBox = () => {\n    this.props.selectBox(this.props.row, this.props.col);\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.boxClass}\n        id={this.props.id}\n        onClick={this.selectBox}\n      />\n    );\n  }\n}\n\nconst Grid = props => {\n  const width = props.cols * 14;\n  let boxClass = \"\";\n  const rowsArr = props.gridFull.map((rowArr, rowIdx) =>\n    rowArr.map((item, colIdx) => {\n      const boxId = `${rowIdx}_${colIdx}`;\n\n      boxClass = props.gridFull[rowIdx][colIdx] ? \"box on\" : \"box off\";\n      return (\n        <Box\n          boxClass={boxClass}\n          key={boxId}\n          boxId={boxId}\n          row={rowIdx}\n          col={colIdx}\n          selectBox={props.selectBox}\n        />\n      );\n    })\n  );\n\n  return (\n    <div className=\"grid\" style={{ width }}>\n      {rowsArr}\n    </div>\n  );\n};\n\nclass Buttons extends React.Component {\n  handleSelect = eventKey => {\n    this.props.gridSize(eventKey);\n  };\n\n  render() {\n    return (\n      <div className=\"center\">\n        <ButtonToolbar>\n          <button className=\"btn btn-default\" onClick={this.props.playButton}>\n            Play\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.pauseButton}>\n            Pause\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.clear}>\n            Clear\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.slow}>\n            Slow\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.fast}>\n            Fast\n          </button>\n          <button className=\"btn btn-default\" onClick={this.props.seed}>\n            Seed\n          </button>\n          <DropdownButton\n            title=\"Grid Size\"\n            id=\"size-menu\"\n            onSelect={this.handleSelect}\n          >\n            // <MenuItem eventKey=\"1\">20x10</MenuItem>\n            // <MenuItem eventKey=\"2\">50x30</MenuItem>\n            // <MenuItem eventKey=\"3\">70x50</MenuItem>\n          </DropdownButton>\n        </ButtonToolbar>\n      </div>\n    );\n  }\n}\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.speed = 100;\n    this.rows = 30;\n    this.cols = 50;\n\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false))\n    };\n  }\n\n  componentDidMount() {\n    this.seed();\n    this.playButton();\n  }\n\n  selectBox = (row, col) => {\n    const gridFull = this.state.gridFull.map((rowArr, rowIdx) =>\n      rowArr.map(\n        (item, colIdx) => (rowIdx === row && colIdx === col ? !item : item)\n      )\n    );\n    this.setState(() => ({ gridFull }));\n  };\n\n  seed = () => {\n    const gridFull = this.state.gridFull.map(rowArr =>\n      rowArr.map(() => Math.floor(Math.random() * 4) === 1)\n    );\n    this.setState(() => ({ gridFull }));\n  };\n\n  playButton = () => {\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(this.play, this.speed);\n  };\n\n  pauseButton = () => {\n    clearInterval(this.intervalId);\n  };\n\n  slow = () => {\n    this.speed = 1000;\n    this.playButton();\n  };\n\n  fast = () => {\n    this.speed = 100;\n    this.playButton();\n  };\n\n  clear = () => {\n    const gridFull = Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false));\n\n    this.setState(() => ({\n      gridFull,\n      generation: 0\n    }));\n  };\n\n  gridSize = size => {\n    switch (size) {\n      case \"1\":\n        this.cols = 20;\n        this.rows = 10;\n        break;\n      case \"2\":\n        this.cols = 50;\n        this.rows = 30;\n        break;\n      default:\n        this.cols = 70;\n        this.rows = 50;\n    }\n    this.clear();\n  };\n\n  play = () => {\n    let g = this.state.gridFull;\n    let g2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        let count = 0;\n        if (i > 0) if (g[i - 1][j]) count++;\n        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n        if (j < this.cols - 1) if (g[i][j + 1]) count++;\n        if (j > 0) if (g[i][j - 1]) count++;\n        if (i < this.rows - 1) if (g[i + 1][j]) count++;\n        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n        if (i < this.rows - 1 && this.cols - 1) if (g[i + 1][j + 1]) count++;\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n        if (!g[i][j] && count === 3) g2[i][j] = true;\n      }\n    }\n    this.setState(prevState => ({\n      gridFull: g2,\n      generation: prevState.generation + 1\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>The Game of Life</h1>\n        <Buttons\n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          slow={this.slow}\n          fast={this.fast}\n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h2>Generations: {this.state.generation}</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}